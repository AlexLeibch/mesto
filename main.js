(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickClose=this._handleClickClose.bind(this)}var n,r;return n=t,(r=[{key:"open",value:function(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleClickClose",value:function(e){e.target===this._popupSelector&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__button-close").addEventListener("click",(function(){return e.close()})),this._popupSelector.addEventListener("mousedown",(function(t){return e._handleClickClose(t)}))}}])&&e(n.prototype,r),t}();function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return(o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=a(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(p,e);var t,n,c,l,s=(c=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(c);if(l){var n=a(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return u(this,e)});function p(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=s.call(this,e))._submitForm=t,n._popupSubmitButton=n._popupSelector.querySelector(".popup__button-save"),n._submitButtonText=n._popupSubmitButton.textContent,n}return t=p,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formPopup=this._popupSelector.querySelectorAll(".popup__field"),this._inputValue={},this._formPopup.forEach((function(t){e._inputValue[t.name]=t.value})),this._inputValue}},{key:"setEventListeners",value:function(){var e=this;o(a(p.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())}))}},{key:"close",value:function(){o(a(p.prototype),"close",this).call(this),this._popupSelector.querySelector(".popup__form").reset()}},{key:"renderLoading",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Сохранение...";this._popupSubmitButton.textContent=e?t:this._submitButtonText}}])&&r(t.prototype,n),p}(t);function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._image=r._popupSelector.querySelector(t),r._title=r._popupSelector.querySelector(n),r}return t=u,(n=[{key:"open",value:function(e,t){this._image.alt=e,this._image.src=t,this._title.textContent=e,p(_(u.prototype),"open",this).call(this)}}])&&s(t.prototype,n),u}(t);function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"setItem",value:function(e){this._container.prepend(e)}},{key:"renderedItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"clear",value:function(){this._container.innerHTML=""}}])&&y(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){var n=t.userName,r=t.userDescription,o=t.profileAvatars;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userDescription=document.querySelector(r),this._profileAvatars=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userDescription.textContent,avatar:this._profileAvatars.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.description,r=e.avatar;t&&(this._userName.textContent=t),n&&(this._userDescription.textContent=n),r&&(this._profileAvatars.src=r)}}])&&m(t.prototype,n),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n,r,o,i){var u=r.handleCardClick,a=r.likeCardClick,c=r.handleCardDelete;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._cardSelector=n,this._handleCardClick=u,this._likeCardClick=a,this._handleCardDelete=c,this._countLikes=t.likes,this._userId=o,this._cardId=i,this._ownerId=t.owner._id}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_like",value:function(){this._element.querySelector(".element__like-button").classList.toggle("element__like-button_active")}},{key:"deleteCard",value:function(){this._element.querySelector(".element__delete-button").closest(".card").remove()}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._imgElement=this._element.querySelector(".element__image"),this._imgElement.src=this._link,this._imgElement.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._handleLike=this._element.querySelector(".element__like-button"),this._likes=this._element.querySelector(".element__like-counter"),this._deleteIcon=this._element.querySelector(".element__delete-button"),this._ownerId!==this._userId&&(this._deleteIcon.style.display="none"),this.renderLikes(),this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._handleLike.addEventListener("click",(function(){e._likeCardClick(),e._like()})),this._element.querySelector(".element__delete-button").addEventListener("click",(function(){e._handleCardDelete()})),this._imgElement.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"removeCard",value:function(){this._element.remove()}},{key:"renderLikes",value:function(){this._likes.textContent=this._countLikes.length,this._showLikes(this._userId)}},{key:"getIdCard",value:function(){return this._cardId}},{key:"likedCard",value:function(){var e=this;return this._countLikes.some((function(t){return t._id===e._userId}))}},{key:"_showLikes",value:function(){this.likedCard(this._userId)?this._handleLike.classList.add("element__like-button_active"):this._handleLike.classList.remove("element__like-button_active")}},{key:"setLikes",value:function(e){this._countLikes=e}}])&&k(t.prototype,n),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationConfig=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationConfig.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._validationConfig.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationConfig.inputErrorClass),t.textContent=e.validationMessage,t.classList.remove(this._validationConfig.errorClass)}},{key:"_chekInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(e){return Array.from(e).some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(t)?this.disabledButton(e):(e.classList.remove(this._validationConfig.disabledButtonSelector),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector)),n=this._formElement.querySelector(this._validationConfig.submitButtonSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._chekInputValidity(r),e._toggleButtonState(n,t)})),e._toggleButtonState(n,t)}))}},{key:"clearInputError",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t),e._formElement.querySelector(".".concat(t.id,"-error")).textContent=""}))}},{key:"disabledButton",value:function(e){e.setAttribute("disabled","true"),e.classList.add(this._validationConfig.disabledButtonSelector)}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault})),this._setEventListeners(this._formElement)}}])&&g(t.prototype,n),e}();function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function q(e,t){return(q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitForm=t,n._popupSubmitButton=n._popupSelector.querySelector(".popup__button-save"),n._submitButtonText=n._popupSubmitButton.textContent,n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(t,e._card)}))}},{key:"open",value:function(e){L(I(u.prototype),"open",this).call(this),this._card=e}}])&&w(t.prototype,n),u}(t);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.address,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:this._headers}).then(this._checkStatus)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._address,"/users/me"),{headers:this._headers}).then(this._checkStatus)}},{key:"editUserInfo",value:function(e,t){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkStatus)}},{key:"addCard",value:function(e,t){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkStatus)}},{key:"editUserAvatar",value:function(e){return fetch("".concat(this._address,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkStatus)}},{key:"likeCard",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkStatus)}},{key:"dislikeCard",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkStatus)}},{key:"removeCard",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkStatus)}},{key:"_checkStatus",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}}])&&P(t.prototype,n),e}(),B=(document.querySelector(".elements"),document.querySelector(".popup_type_profile")),T=document.querySelector(".popup_type_cardpopup"),x=document.querySelector(".popup_type_imagepopup"),A=document.querySelector(".profile__edit-button"),D=document.querySelector(".profile__add-button"),U=(B.querySelector(".popup__button-close"),T.querySelector(".popup__button-close"),x.querySelector(".popup__button-close"),document.querySelector(".popup__button-close"),document.querySelector(".profile__username"),document.querySelector(".profile__user-description"),B.querySelector(".popup__form-profile")),V=T.querySelector(".popup__form-card"),N=document.querySelector(".popup__field_type_name"),F=document.querySelector(".popup__field_type_description"),M=(T.querySelector(".popup__field_type_place"),T.querySelector(".popup__field_type_imageUrl"),document.querySelector(".elements"),document.querySelector(".elements-template"),T.querySelector(".popup__button-save")),H=(document.querySelector(".popup__image"),document.querySelector(".popup__caption"),document.querySelector(".popup"),document.forms["popup-card"],document.querySelector(".popup_type_avatarpopup")),J=(document.querySelector(".profile__avatar"),H.querySelector(".popup__form-avatar")),z=H.querySelector(".popup__field_avatar_imageUrl"),$=document.querySelector(".profile__avatar-edit"),G=H.querySelector(".popup__button-save"),K={formSelector:".popup__form",inputSelector:".popup__field",submitButtonSelector:".popup__button-save",disabledButtonSelector:"popup__button-disabled",inputErrorClass:"popup__field-invalid",errorClass:"popup__error",popupOpen:".popup_opened"};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var W=new R({address:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{authorization:"6a8d306b-88c2-4559-b9fb-ed6535e42e98","Content-type":"application/json"}});Promise.all([W.getUserInfo(),W.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1].reverse();ae.setUserInfo(o),ue.renderedItems(i)})).catch((function(e){console.log("Произошла ошибка: ".concat(e))}));var X=new h(".popup_type_imagepopup",".popup__image",".popup__caption");X.setEventListeners();var Y=new c(".popup_type_profile",(function(e){Y.renderLoading(!0),W.editUserInfo(e.name,e.description).then((function(){ae.setUserInfo(e),Y.close()})).catch((function(e){console.log("Произошла ошибка: ".concat(e))})).finally((function(){Y.renderLoading(!1)}))}));Y.setEventListeners();var Z=new c(".popup_type_cardpopup",(function(e){Z.renderLoading(!0),W.addCard(e.placeName,e["form-link-input"]).then((function(e){var t=ie(e);ue.setItem(t),Z.close()})).finally((function(){Z.renderLoading(!1)}))}));Z.setEventListeners();var ee=new c(".popup_type_avatarpopup",(function(){ee.renderLoading(!0),W.editUserAvatar(z.value).then((function(e){ae.setUserInfo(e),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.renderLoading(!1)}))}));ee.setEventListeners();var te=new j(".popup_type_deleteimage",(function(e,t){ce(e,t)}));te.setEventListeners();var ne=new C(K,U),re=new C(K,V),oe=new C(K,J);function ie(e){var t=new S(e,".elements-template",{handleCardClick:function(e,t){X.open(e,t)},likeCardClick:function(){(t.likedCard()?W.dislikeCard(t.getIdCard()):W.likeCard(t.getIdCard())).then((function(e){t.setLikes(e.likes),t.renderLikes()})).catch((function(e){console.log(e)}))},handleCardDelete:function(){te.open(t)}},"413b95658633c2bb86ec5848",e._id);return t.generateCard()}ne.enableValidation(),re.enableValidation(),oe.enableValidation();var ue=new v({renderer:function(e){var t=ie(e);ue.setItem(t)}},".elements");D.addEventListener("click",(function(){Z.open(),re.disabledButton(M),re.clearInputError(M)}));var ae=new b({userName:".profile__username",userDescription:".profile__user-description",profileAvatars:".profile__avatar"});A.addEventListener("click",(function(){Y.open();var e=ae.getUserInfo();N.value=e.name,F.value=e.about,ne.clearInputError(M)})),$.addEventListener("click",(function(){ee.open(),oe.clearInputError(G),oe.disabledButton(G)}));var ce=function(e,t){e.preventDefault(),W.removeCard(t.getIdCard()).then((function(e){t.removeCard(),te.close()})).catch((function(e){console.log(e)}))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,